📋 NPM Scripts 說明文件

本文件詳細說明 package.json 中每個 script 的功能與用途。

================================================================================

🔧 可用的 Scripts

🆘 快速幫助指令

📖 npm run help
   ├─ 顯示 SCRIPTS.md 文件的完整內容
   ├─ 提供完整的使用指南和範例
   └─ 適合詳細了解所有指令功能

🛠️ 主要開發指令

🧪 npm test
   ├─ 執行 Jest 測試套件
   ├─ 使用 jest.config.cjs 配置檔案
   ├─ --runInBand 參數確保測試按順序執行，避免並發問題
   └─ 適用於單元測試和整合測試

🧹 npm run clean
   ├─ 清理建置目錄
   ├─ 刪除根目錄下的 ../../dist 資料夾
   ├─ 刪除當前目錄下的 dist_ts 資料夾
   ├─ 重新建立空的 dist_ts 目錄
   └─ 用於確保乾淨的建置環境

⚙️ npm run inject:config
   ├─ 注入配置設定
   ├─ 執行 config/inject-config.mjs 腳本
   ├─ 將配置參數注入到程式碼中
   └─ 通常在建置前執行，用於環境特定的設定

🔨 npm run ts:build
   ├─ 編譯 TypeScript 程式碼
   ├─ 使用 config/tsconfig.json 配置檔案
   ├─ --noEmitOnError 參數確保有錯誤時不生成檔案
   └─ 編譯結果輸出到 dist_ts 目錄

📁 npm run copy:static
   ├─ 複製靜態檔案到最終部署目錄
   ├─ 建立 ../../dist/extension 目錄
   ├─ 複製編譯後的 TypeScript 檔案（從 dist_ts）
   ├─ 複製 manifest.json、assets、vendor、README.md
   ├─ 複製 UI 檔案：popup.html 和 main.css（重新命名為 styles.css）
   ├─ 複製啟動腳本：popup.bootstrap.mjs
   ├─ 條件複製：地圖優化器和服務工作者檔案
   ├─ 複製 Leaflet MarkerCluster 依賴
   └─ 清理測試檔案（移除 __tests__ 目錄）

🏗️ npm run build ⭐ (最常用)
   ├─ 完整建置流程，按順序執行：
   ├─ 1. npm run clean - 清理目錄
   ├─ 2. npm run inject:config - 注入配置
   ├─ 3. npm run ts:build - 編譯 TypeScript
   ├─ 4. npm run copy:static - 複製靜態檔案
   └─ 這是開發時最常用的指令，會產生完整的可用擴充功能

📦 npm run zip
   ├─ 建置並打包成 ZIP 檔案
   ├─ 先執行完整建置流程
   ├─ 將 ../../dist/extension 目錄打包成 extension.zip
   └─ 適用於準備上傳到 Chrome Web Store

🚀 npm run package
   ├─ 完整打包流程的別名
   ├─ 等同於 npm run zip
   └─ 提供更語義化的指令名稱

================================================================================

💡 使用場景

📚 查看說明

   npm run help          # 查看完整文件內容

🔧 開發階段

   npm run build    # 建置開發版本
   npm test         # 執行測試

🚀 部署準備

   npm run package  # 建置並打包發布版本

🐛 除錯時

   npm run clean    # 清理後重新建置
   npm run build

================================================================================

📂 檔案結構說明

建置完成後，檔案會被複製到以下結構：

../../dist/extension/
├── manifest.json           # 擴充功能配置
├── popup.html             # 彈出視窗 UI
├── styles.css             # 樣式檔案
├── popup.bootstrap.mjs    # 啟動腳本
├── assets/                # 靜態資源
├── vendor/                # 第三方程式庫
├── node_modules/          # 必要的 npm 依賴
└── [編譯後的 JS 檔案]      # 從 TypeScript 編譯而來

================================================================================
